#!/bin/bash
print()
{
	local OPTIND
	if [ "$(uname -s)" == "Darwin" ];then
		Black='\033[0;30m'        # Black
		Red='\033[0;31m'          # Red
		Green='\033[0;32m'        # Green
		Yellow='\033[0;33m'       # Yellow
		Blue='\033[0;34m'         # Blue
		Purple='\033[0;35m'       # Purple
		Cyan='\033[0;36m'         # Cyan
		White='\033[0;37m'        # White
		# Bold
		BBlack='\033[1;30m'       # Black
		BRed='\033[1;31m'         # Red
		BGreen='\033[1;32m'       # Green
		BYellow='\033[1;33m'      # Yellow
		BBlue='\033[1;34m'        # Blue
		BPurple='\033[1;35m'      # Purple
		BCyan='\033[1;36m'        # Cyan
		BWhite='\033[1;37m'       # White
		# Background
		On_Black='\033[40m'       # Black
		On_Red='\033[41m'         # Red
		On_Green='\033[42m'       # Green
		On_Yellow='\033[43m'      # Yellow
		On_Blue='\033[44m'        # Blue
		On_Purple='\033[45m'      # Purple
		On_Cyan='\033[46m'        # Cyan
		On_White='\033[47m'       # White
		NC='\033[m'               # Color Reset
	else 
		Black='\e[0;30m'        # Black
		Red='\e[0;31m'          # Red
		Green='\e[0;32m'        # Green
		Yellow='\e[0;33m'       # Yellow
		Blue='\e[0;34m'         # Blue
		Purple='\e[0;35m'       # Purple
		Cyan='\e[0;36m'         # Cyan
		White='\e[0;37m'        # White
		# Bold
		BBlack='\e[1;30m'       # Black
		BRed='\e[1;31m'         # Red
		BGreen='\e[1;32m'       # Green
		BYellow='\e[1;33m'      # Yellow
		BBlue='\e[1;34m'        # Blue
		BPurple='\e[1;35m'      # Purple
		BCyan='\e[1;36m'        # Cyan
		BWhite='\e[1;37m'       # White
		# Background
		On_Black='\e[40m'       # Black
		On_Red='\e[41m'         # Red
		On_Green='\e[42m'       # Green
		On_Yellow='\e[43m'      # Yellow
		On_Blue='\e[44m'        # Blue
		On_Purple='\e[45m'      # Purple
		On_Cyan='\e[46m'        # Cyan
		On_White='\e[47m'       # White
		NC="\e[m"               # Color Reset
	fi
	if which cowsay >&/dev/null; then
		CS="$(which cowsay)"
	else
		CS=""
	fi
	if which figlet >&/dev/null; then
		FIG="$(which figlet)"
	else
		FIG=""
	fi
	colors=( "$Red" "$Green" "$Gellow" "$Blue" "$Purple" "$Cyan" )
	DEBUG=0
	FGND=""
	BKGN=""
	BOLD=0
	NL=1
	PNL=0
	STRING=" "
	STYLE=""
	POS=0
	RAINBOW=0
	while getopts "f:b:IcnpFAKRGYBPCWDS:" opt
	do
		case "$opt" in
			"f")					# Set foreground/text color.
				case "$OPTARG" in
					"black") [ $BOLD -eq 0 ] && FGND="$Black" || FGDN="$BBlack" ;;
					"red") [ $BOLD -eq 0 ] && FGND="$Red" || FGND="$BRed" ;;
					"green") [ $BOLD -eq 0 ] && FGND="$Green" || FGND="$BGreen" ;;
					"yellow") [ $BOLD -eq 0 ] && FGND="$Yellow" || FGND="$BYellow" ;;
					"blue") [ $BOLD -eq 0 ] && FGND="$Blue" || FGND="$BBlue" ;;
					"purple") [ $BOLD -eq 0 ] && FGND="$Purple" || FGND="$BPurple" ;;
					"cyan") [ $BOLD -eq 0 ] && FGND="$Cyan" || FGND="$BCyan" ;;
					"white") [ $BOLD -eq 0 ] && FGND="$White" || FGND="$BWhite" ;;
					"*") [ $DEBUG -eq 1 ] && echo "Unrecognized Arguement: $OPTARG" ;;
				esac
				;;
			"b")					# Set background color.
				case "$OPTARG" in
					"black") BKGN="$On_Black" ;;
					"red") BKGN="$On_Red" ;;
					"green") BKGN="$On_Green" ;;
					"yellow") BKGN="$On_Yellow" ;;
					"blue") BKGN="$On_Blue" ;;
					"purple") BKGN="$On_Purple" ;;
					"cyan") BKGN="$On_Cyan" ;;
					"white") BKGN="$On_White" ;;
					"*") [ $DEBUG -eq 1 ] && echo "Unrecognized Arguement: $OPTARG" ;;
				esac
				;;
			"I") BOLD=1 ;;				# Enable bold text.
			"c")
				WIDTH=$(tput cols)					# Current screen width
				if [ $WIDTH -le 80 ]; then
					POS=0
				else
					POS=$((( $WIDTH - 80 ) / 2 ))		# Middle of screen based on screen width
				fi
				;;				# Center the text in screen.
			"n") NL=0 ;;	 			# Print with newline.
			"p") ((PNL++)) ;; 			# Prepend with newline.
			"F") [ -f "$FIG" ] && STYLE="$FIG" ;;
			"A") [ -f "$CS" ] && STYLE="$CS" ;;
			"K") [ $BOLD -eq 0 ] && FGND="$Black" ||  FGDN="$BBlack" ;;
			"R") [ $BOLD -eq 0 ] && FGND="$Red" || FGND="$BRed" ;;
			"G") [ $BOLD -eq 0 ] && FGND="$Green" || FGND="$BGreen" ;;
			"Y") [ $BOLD -eq 0 ] && FGND="$Yellow" || FGND="$BYellow" ;;
			"B") [ $BOLD -eq 0 ] && FGND="$Blue" || FGND="$BBlue" ;;
			"P") [ $BOLD -eq 0 ] && FGND="$Purple" || FGND="$BPurple" ;;
			"C") [ $BOLD -eq 0 ] && FGND="$Cyan" || FGND="$BCyan" ;;
			"W") [ $BOLD -eq 0 ] && FGND="$White" || FGND="$BWhite";;
			"D") DEBUG=1 ;;
			"S") STRING="$OPTARG" ;;
			"*") [ $DEBUG -eq 1 ] && echo "Unknown Arguement: $opt" ;;
		esac
	done
	if [[ "$STRING" == " " ]];then
		shift "$((OPTIND - 1))"
		STRING="$@" 
	fi
	if [ $DEBUG -eq 1 ]; then
		echo "FGND: $FGND"
		echo "BKGN: $BKGN"
		echo "BOLD: $BOLD"
		echo "NL: $NL"
		echo "PNL: $PNL"
		echo "POS: $POS"
		echo "STYLE: $STYLE"
		echo "STRING: $STRING"
	fi
	while [ $PNL -ne 0 ] 
	do
		printf "\n"
		((PNL--))
	done
	[ ! -z $STYLE ] && STRING="$($STYLE $STRING)"
	if [ $POS -eq 0 ]; then
		[ ! -z $BKGN ] && STRING="$BKGN$STRING"
		if [ $RAINBOW -eq 1 ]; then
			STRING_r=""
			words=($STRING)
			for c in "${words[@]}"
			do
				random_color
				STRING_r="$STRING_r$FGND$c "
			done
			STRING=$STRING_r
		else
			[ ! -z $FGND ] && STRING="$FGND$STRING"
		fi
		[ ! -z $FGND ] || [ ! -z $BKGN ] && STRING="$STRING$NC"	# Append color reset if foreground/background is set.
		printf -- "$STRING"
	else
		printf -- "$FGND$BKGN%$POS"s"$NC" "$STRING"
	fi
	[ $NL -eq 1 ] && printf "\n"
}
tests()
{
	if [ $1 -eq 1 ];then
		V="-D"
	else
		V=""
	fi
	print -c $V "Centered"
	print -F $V "Figlet"
	print -A $V "Cowsay"
	print -K $V "Black" 
	print -R $V "Red" 
	print -G $V "Green"
	print -Y $V "Yellow"
	print -B $V "Blue"
	print -P $V "Purple"
	print -C $V "Cyan"
	print -W $V "White"
	print -I -K $V "Bold Black" 
	print -I -R $V "Bold Red" 
	print -I -G $V "Bold Green"
	print -I -Y $V "Bold Yellow"
	print -I -B $V "Bold Blue"
	print -I -P $V "Bold Purple"
	print -I -C $V "Bold Cyan"
	print -I -W $V "Bold White"
}
tests 1
exit 0
